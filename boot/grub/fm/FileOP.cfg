# Grub2-FileManager
# Copyright (C) 2016,2017  A1ive.
#
# Grub2-FileManager is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Grub2-FileManager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Grub2-FileManager.  If not, see <http://www.gnu.org/licenses/>.

source ${prefix}/fm/Type.cfg;
source "${prefix}/fm/LinuxISOBoot.cfg";

function funcAddCD {
	set added_menu="${added_menu} funcAddCD";
	loopback loop "${list_dir}";
	menuentry "查看ISO内容"  --class iso{
		set list_dir="(loop)";
		export list_dir;
		configfile ${prefix}/fm/FileList.cfg;
	}
	funcCheckType;
	if test -f (loop)/efi/boot/bootx64.efi; then
		menuentry "启动 bootx64.efi" --class iso{
			chainloader (loop)/efi/boot/bootx64.efi;
		}
	fi
}

function funcAddCFG {
	set added_menu="${added_menu} funcAddCFG";
	menuentry "作为Grub2菜单文件载入"  --class cfg{
		regexp --set=str '^\(([0-9a-zA-Z,]+)\).*$' "${list_dir}"
		set root="${str}";
		configfile "${list_dir}";
	}
	menuentry "作为Syslinux菜单文件载入"  --class cfg{
		regexp --set=str '^\(([0-9a-zA-Z,]+)\).*$' "${list_dir}"
		set root="${str}";
		syslinux_configfile "${list_dir}";
	}
}

function funcAddLUA {
	set added_menu="${added_menu} funcAddLUA";
	menuentry "作为Lua脚本运行"  --class lua{
		regexp --set=str '^\(([0-9a-zA-Z,]+)\).*$' "${list_dir}"
		set root="${str}";
		lua "${list_dir}";
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
}

function funcAddEFI {
	set added_menu="${added_menu} funcAddEFI";
	menuentry "作为EFI可执行文件运行"  --class uefi{
		chainloader ${list_dir};
		boot;
	}
}

function funcAddPNG {
	set added_menu="${added_menu} funcAddPNG";
	submenu "查看图片 (PNG)" --class png{
		background_image ${list_dir};
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
		background_image ${prefix}/themes/slack/black.png
	}
}

function funcAddAll {
	set added_menu="${added_menu} funcAddAll";
	menuentry "显示文本内容"  --class txt{
		set pager=1;
		cat "${list_dir}";
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
	menuentry "显示文件信息"  --class info{
		set pager=1;
		echo "文件位置";
		echo ${list_dir};
		echo "CRC32";
		crc32 ${list_dir};
		echo "hexdump";
		hexdump ${list_dir};
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
}

menuentry "返回"  --class go-previous{
	regexp --set=list_dir '(.*)\/.*$' "${list_dir}";
	unset devnum;
	unset str;
	unset sequence;
	unset added_menu;
	configfile ${prefix}/fm/FileList.cfg;
}

funcGetFileType "${list_dir}";
if regexp 'cfg' "$type"; then
	funcAddCFG;
elif regexp 'lua' "$type"; then
	funcAddLUA;
elif regexp 'efi' "$type"; then
	funcAddEFI;
elif regexp 'image' "$type"; then
	funcAddPNG;
elif regexp 'iso' "$type"; then
	funcAddCD;
fi
funcAddAll;

unset devnum;
unset str;
unset sequence;
unset added_menu;
