insmod regexp;
source ${prefix}/fm/Tools.cfg;
source "${prefix}/fm/LinuxISOBoot.cfg";
#文件操作菜单

#挂载为光盘
function funcAddCD {
	set added_menu="${added_menu} funcAddCD";
	echo "挂载 ${list_dir}";
	loopback loop "${list_dir}";
	menuentry "查看ISO内容"  --class iso{
		set list_dir="(loop)";
		export list_dir;
		configfile ${prefix}/fm/FileList.cfg;
	}
	funcCheckType;
	if test -f (loop)/efi/boot/bootx64.efi; then
		menuentry "启动 bootx64.efi"  --class iso{
			chainloader (loop)/efi/boot/bootx64.efi;
		}
	fi
}
#当作[Grub2菜单文件]载入
function funcAddCFG {
	set added_menu="${added_menu} funcAddCFG";
	menuentry "作为Grub2菜单文件载入"  --class cfg{
		funcGetDevName "${list_dir}";
		set root="${str}";
		configfile "${list_dir}";
	}
}
#当作[Lua脚本]运行
function funcAddLUA {
	set added_menu="${added_menu} funcAddLUA";
	menuentry "作为Lua脚本运行"  --class lua{
		funcGetDevName "${list_dir}";
		set root="${str}";
		lua "${list_dir}";
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
}
#当作[EFI文件]运行
function funcAddEFI {
	set added_menu="${added_menu} funcAddEFI";
	menuentry "作为EFI可执行文件运行"  --class uefi{
		chainloader ${list_dir};
		boot;
	}
}
#显示图片
function funcAddPNG {
	set added_menu="${added_menu} funcAddPNG";
	submenu "查看图片 (PNG)" --class png{
		background_image ${list_dir};
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
		background_image ${prefix}/themes/slack/black.png
	}
}
#适用于所有文件的操作
function funcAddAll {
	set added_menu="${added_menu} funcAddAll";
	menuentry "显示文本内容"  --class txt{
		set pager=1;
		cat "${list_dir}";
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
	menuentry "显示文件信息"  --class info{
		set pager=1;
		echo "文件位置";
		echo ${list_dir};
		echo "CRC32";
		crc32 ${list_dir};
		echo "hexdump";
		hexdump ${list_dir};
		echo -n "按 [ESC] 键返回...";
		sleep --interruptible 999;
	}
}

#检查文件格式
funcGetFileExtName "${list_dir}";


menuentry "返回"  --class go-previous{
	regexp --set=list_dir '(.*)\/.*$' "${list_dir}";
	unset devnum;
	unset str;
	unset sequence;
	unset added_menu;
	configfile ${prefix}/fm/FileList.cfg;
}

if regexp '^[iI][sS][oO]$' "${str}"; then
	#iso
	funcAddCD;
elif regexp '^[cC][fF][gG]$' "${str}"; then
	#cfg
	funcAddCFG;
elif regexp '^[lL][uU][aA]$' "${str}"; then
	#lua
	funcAddLUA;
elif regexp '^[eE][fF][iI]$' "${str}"; then
	#efi
	funcAddEFI;
elif regexp '^[pP][nN][gG]$' "${str}"; then
	#png
	funcAddPNG;
elif regexp '^[jJ][pP][gG]$' "${str}"; then
	#jpg
	funcAddPNG;
fi

funcAddAll;

#清理环境
unset devnum;
unset str;
unset sequence;
unset added_menu;
